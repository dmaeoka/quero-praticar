@mixin clearfix {
    &:before, &:after {
        content: "";
        display: table;
    }
    &:after {
        clear: both;
    }
}

@mixin cf{
	&:before,
	&:after {
		display:table;
		content:" ";
	}
	&:after {
		clear:both;
	}
}

@mixin hoverActiveFocus() {
    &:hover, &:active, &:focus {
        @content;
    }
}

@mixin screen-reader-text() {
    clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
    clip: rect(1px, 1px, 1px, 1px);
    position: absolute !important;
}

@mixin underlinedLink() {
	font-weight: 400;
	text-decoration: underline;

	&:hover {
		text-decoration: none;
	}
}

@mixin message($glyph: "\f05a", $color: $info)
{
    padding: 1em ms(3) 1em ms(6);
    background: rgba( $color, .7 );
    margin-bottom: ms(5);
    font-weight: normal;
    position: relative;
    color: #fff;
    text-shadow: none;

    &:before {
        font-family: 'FontAwesome';
        content: $glyph;
        color: #fff;
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        width: ms(5);
        background: rgba( darken( $color, 3% ), .7 );
        text-align: center;
        padding: 1em ms(-2);
        font-weight: normal !important;
        text-shadow: none;
    }

    a {
        color: #fff;
        text-decoration: underline;

        &:hover {
            color: #fff;
            text-decoration: none;
        }
    }

    a.button {
        background: #fff;
        color: $color;
        font-size: ms(-1);
        padding: .202em ms(-2);

        &:hover,
        &:active {
            background: rgba(#fff,.8);
            color: $color;
        }
    }
}

@mixin button() {
	border: 0;
	background: none;
	background-color: $color_body;
	border-color: $color_body;
	color: #fff;
	cursor: pointer; /* Improves usability and consistency of cursor style between image-type 'input' and others */
	padding: ms(-2) ms(2);
	text-decoration: none;
	font-weight: 600;
	text-shadow: none;
	display: inline-block;
	outline: none;
	-webkit-appearance: none;
	-webkit-font-smoothing: antialiased;
	border-radius: 0;
	box-shadow: inset 0 -1px 0 rgba(#000,.3);
}
@mixin absolute($z:3){
    position:absolute; 
    z-index:$z;
}
@mixin relative($z:2){
    position:relative; 
    z-index:$z;
}
@mixin fixed($z:4){
    position:fixed; 
    z-index:$z;
}
@mixin bgCover{
    -webkit-background-size:cover;
            background-size:cover;
}
@mixin backgroundSize($property:cover){
    -webkit-background-size:$property;
       -moz-background-size:$property;
            background-size:$property;
}
@mixin boxShadow($ts){
    -webkit-box-shadow:$ts;
       -moz-box-shadow:$ts;
            box-shadow:$ts;
}
@mixin transitions($property:all,$ms:200ms,$timing:linear){
    -webkit-transition:$property $ms $timing;
       -moz-transition:$property $ms $timing;
         -o-transition:$property $ms $timing;
            transition:$property $ms $timing;
}
@mixin opacity($opacity){
    opacity:$opacity;
    filter:alpha(opacity=$opacity*100);
}
@mixin inline-block{
    display:inline-block; 
    *display:inline; 
    zoom:1;
}
@mixin linearGradient($top, $bottom){
    background:$top;
    background:-moz-linear-gradient(top,  $top 0%, $bottom 100%);
    background:-webkit-gradient(linear, left top, left bottom, color-stop(0%,$top), color-stop(100%,$bottom));
    background:-webkit-linear-gradient(top,  $top 0%,$bottom 100%);
    background:-o-linear-gradient(top,  $top 0%,$bottom 100%);
    background:-ms-linear-gradient(top,  $top 0%,$bottom 100%);
    background:linear-gradient(to bottom,  $top 0%,$bottom 100%);
    filter:progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000',GradientType=0 );
}
@mixin radio-variant($parent, $color) {
	#{$parent} input[type="radio"]{
		+ label{
			&::after{
				background-color: $color;
			}
		}
		&:checked + label{
			&::before {
				border-color: $color;
			}
			&::after{
				background-color: $color;
			}
		}
	}
}
@mixin checkbox-variant($parent, $color) {
	#{$parent} input[type="checkbox"]:checked + label,
	#{$parent} input[type="radio"]:checked + label {
		&::before {
			background-color: $color;
			border-color: $color;
		}
		&::after{
			color: #fff;
		}
	}
}

@mixin checkbox-variant-indeterminate($parent, $color) {
	#{$parent} input[type="checkbox"]:indeterminate + label,
	#{$parent} input[type="radio"]:indeterminate + label {
		&::before {
			background-color: $color;
			border-color: $color;
		}
		&::after{
			background-color: #fff;
		}
	}
}